[{"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\index.js":"1","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\App.jsx":"2","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\utils\\users-service.js":"3","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\NavBar\\NavBar.jsx":"4","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\DropDownMenu\\DropDownMenuTwo.jsx":"5","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\DropDownMenu\\DropDownMenu.jsx":"6","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\Posts\\Posts.jsx":"7","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\DeleteButton\\DeleteButton.jsx":"8","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\pages\\AuthPage\\AuthPage.jsx":"9","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\pages\\PostIdPage\\PostIdPage.jsx":"10","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\pages\\NewItemPage\\NewItemPage.jsx":"11","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\pages\\UserProfilePage\\UserProfilePage.jsx":"12","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\pages\\NewPostPage\\NewPostPage.jsx":"13","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\utils\\users-api.js":"14","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\utils\\posts-api.js":"15","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\utils\\items-api.js":"16","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\PageTitle\\PageTitle.jsx":"17","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\DropDownMenuItem\\DropDownMenuItem.jsx":"18","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\Bid\\Bid.jsx":"19","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\LoginForm\\LoginForm.jsx":"20","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\SignUpForm\\SignUpForm.jsx":"21","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\Reply\\Reply.jsx":"22","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\Form\\Form.jsx":"23","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\Carousel\\Carousel.jsx":"24","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\ItemCreateForm\\ItemCreateForm.jsx":"25","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\Column\\Column.jsx":"26","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\Deal\\Deal.jsx":"27","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\ItemDrag\\ItemDrag.jsx":"28","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\Item\\Item.jsx":"29","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\Conversation\\Conversation.jsx":"30","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\utils\\messages-api.js":"31"},{"size":298,"mtime":1624606140000,"results":"32","hashOfConfig":"33"},{"size":2729,"mtime":1624606140000,"results":"34","hashOfConfig":"33"},{"size":988,"mtime":1675332614547,"results":"35","hashOfConfig":"33"},{"size":1496,"mtime":1624606140000,"results":"36","hashOfConfig":"33"},{"size":785,"mtime":1624606140000,"results":"37","hashOfConfig":"33"},{"size":982,"mtime":1624606140000,"results":"38","hashOfConfig":"33"},{"size":2953,"mtime":1624606140000,"results":"39","hashOfConfig":"33"},{"size":295,"mtime":1624606140000,"results":"40","hashOfConfig":"33"},{"size":1002,"mtime":1624606140000,"results":"41","hashOfConfig":"33"},{"size":3214,"mtime":1624606140000,"results":"42","hashOfConfig":"33"},{"size":350,"mtime":1624606140000,"results":"43","hashOfConfig":"33"},{"size":2045,"mtime":1624606140000,"results":"44","hashOfConfig":"33"},{"size":188,"mtime":1624606140000,"results":"45","hashOfConfig":"33"},{"size":591,"mtime":1675332749931,"results":"46","hashOfConfig":"33"},{"size":3600,"mtime":1624606140000,"results":"47","hashOfConfig":"33"},{"size":1003,"mtime":1624606140000,"results":"48","hashOfConfig":"33"},{"size":436,"mtime":1624606140000,"results":"49","hashOfConfig":"33"},{"size":354,"mtime":1624606140000,"results":"50","hashOfConfig":"33"},{"size":5925,"mtime":1624606140000,"results":"51","hashOfConfig":"33"},{"size":1808,"mtime":1624606140000,"results":"52","hashOfConfig":"33"},{"size":2786,"mtime":1675331078968,"results":"53","hashOfConfig":"33"},{"size":2048,"mtime":1624606140000,"results":"54","hashOfConfig":"33"},{"size":2424,"mtime":1624606140000,"results":"55","hashOfConfig":"33"},{"size":3388,"mtime":1624606140000,"results":"56","hashOfConfig":"33"},{"size":3225,"mtime":1624606140000,"results":"57","hashOfConfig":"33"},{"size":906,"mtime":1624606140000,"results":"58","hashOfConfig":"33"},{"size":3275,"mtime":1624606140000,"results":"59","hashOfConfig":"33"},{"size":3810,"mtime":1624606140000,"results":"60","hashOfConfig":"33"},{"size":861,"mtime":1624606140000,"results":"61","hashOfConfig":"33"},{"size":2709,"mtime":1624606140000,"results":"62","hashOfConfig":"33"},{"size":879,"mtime":1624606140000,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"uwsrm7",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\index.js",[],["134","135"],"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\App.jsx",[],"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\utils\\users-service.js",[],"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\NavBar\\NavBar.jsx",[],"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\DropDownMenu\\DropDownMenuTwo.jsx",[],"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\DropDownMenu\\DropDownMenu.jsx",[],"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\Posts\\Posts.jsx",[],"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\DeleteButton\\DeleteButton.jsx",[],"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\pages\\AuthPage\\AuthPage.jsx",[],"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\pages\\PostIdPage\\PostIdPage.jsx",["136"],"import React, { useState, useEffect } from \"react\";\nimport PostsApi from \"../../utils/posts-api\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Reply from \"../../components/Reply/Reply\";\nimport \"./PostIdPage.css\";\nimport Bid from \"../../components/Bid/Bid\";\nimport Carousel from \"../../components/Carousel/Carousel\";\nimport { getUser } from \"../../utils/users-service\";\nimport DeleteButton from \"../../components/DeleteButton/DeleteButton\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function PostIdPage({ match, user }) {\n  const currentUser = getUser();\n  const history = useHistory();\n\n  // TODO API Calls and posts state are temporarily here, but should be moved up to a Page\n  const [post, setPost] = useState({\n    title: \"\",\n    text: \"\",\n    itemsOffered: [],\n    date: undefined,\n    author: {\n      name: \"\",\n      id: \"\",\n    }\n  });\n  const [errorMsg, setErrorMsg] = useState(null);\n\n  const handleDelete = (id) => {\n    PostsApi.deletePost(id)\n      .then(history.push(\"/posts\"));\n  };\n\n  const formatter = new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"2-digit\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n    hour12: true,\n    timeZone: \"EST\",\n  });\n\n  // Load posts here with an API call on component mount.\n  // Using a promise since useEffect must be synchronous.\n  function loadPosts() {\n    PostsApi.getOnePost(match.params.id)\n      .then((data) =>\n        setPost({\n          ...data,\n          title: data.title.toUpperCase(),\n          date: formatter.format(Date.parse(data.createdAt)),\n        })\n      )\n      .catch((err) => setErrorMsg(err.message));\n  }\n\n  useEffect(() => {\n    loadPosts();\n  }, []);\n\n  return (\n    <>\n      <span>{errorMsg}</span>\n      <div>\n        <PageTitle titleOne={\"VIEW\"} titleTwo={post.title} />\n      </div>\n      <div className=\"PostIdPage post-page-column\">\n        <div className=\"PostIdPage post-page-row\"></div>\n        <div className=\"PostIdPage post-page-row\">\n\n        </div>\n        <div className=\"PostIdPage post-page-row\">\n          <p id=\"form-p-pink\">{post.date}</p>\n        </div>\n        <div className=\"PostIdPage post-page-row\">\n          <div className=\"post-offering\">{post.author.name} is offering:</div>\n        </div>\n        <div className=\"PostIdPage post-page-row\">\n          <Carousel post={post} />\n        </div>\n        <div className=\"PostIdPage post-page-row\">\n          <p className=\"flex-p\">{post.text}</p>\n        </div>\n        <div className=\"PostIdPage post-page-row\">\n          {currentUser._id !== post.author._id ? (\n            <Bid user={user} loadPosts={loadPosts} postId={match.params.id} />\n          ) : (\n            <DeleteButton handleDelete={() => handleDelete(post._id)} />\n          )}\n        </div>\n      </div>\n      <div className=\"PostIdPage post-page-column\">\n        <div className=\"Post-post-title\">\n          {post.title}\n          <br /> currently has {post.replies ? post.replies.length : 0} bid(s)\n        </div>\n        {post.replies\n          ? post.replies.map((reply, idx) => {\n            return <Reply key={idx} post={post} reply={reply} />;\n          })\n          : null}\n      </div>\n    </>\n  );\n}\n","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\pages\\NewItemPage\\NewItemPage.jsx",[],"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\pages\\UserProfilePage\\UserProfilePage.jsx",["137"],"import React, { useState, useEffect } from \"react\";\nimport ItemCreateForm from \"../../components/ItemCreateForm/ItemCreateForm\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { Route, Link, Switch } from \"react-router-dom\";\nimport \"./UserProfilePage.css\";\nimport Carousel from \"../../components/Carousel/Carousel\";\nimport itemsApi from \"../../utils/items-api\";\n\nexport default function UserProfilePage({ user }) {\n  const [itemData, setItemData] = useState([]);\n  const [addSelected, setAddSelected] = useState(\"\");\n  const [viewSelected, setViewSelected] = useState(\"\");\n\n  const getItems = async () => {\n    if (user) {\n      const items = await itemsApi.show(user._id);\n      setItemData(items.item);\n    }\n  };\n\n  const handleClickAdd = () => {\n    setAddSelected(\"user-link-selected\");\n    setViewSelected(\"\");\n  };\n\n  const handleClickView = () => {\n    setAddSelected(\"\");\n    setViewSelected(\"user-link-selected\");\n  };\n\n  useEffect(() => {\n    getItems();\n  }, []);\n\n  return (\n    <>\n      <PageTitle titleOne={\"WELCOME\"} titleTwo={user.name.toUpperCase()} />\n      <div className=\"user-profile-container\">\n        <div className=\"user-profile-nav\">\n          <div>\n            <Link \n              to={{ pathname: `/users/${user._id}/items`, state: user }} \n              exact \n              className={`${viewSelected}`}\n              onClick={handleClickView}\n            >View Items\n            </Link>\n          </div>\n          <div>\n            <Link to=\"/users/items/new\" className={`${addSelected}`} onClick={handleClickAdd}>Add Items</Link>\n          </div>\n        </div>\n        {itemData.length === 0 ? <p className=\"UserProfilePage-prompt\">You currently have no items!</p> : \"\"}\n\n        <div className=\"user-profile-body\">\n          <Switch>\n            <Route path=\"/users/items/new\" component={ItemCreateForm} />\n            {itemData.length > 0 ? <Route path={\"/users/:id/items\"} render={() => <Carousel user={user} />} /> : \"\"}\n          </Switch>\n        </div>\n      </div>\n\n    </>\n  );\n}\n","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\pages\\NewPostPage\\NewPostPage.jsx",[],"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\utils\\users-api.js",[],"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\utils\\posts-api.js",[],"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\utils\\items-api.js",[],"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\PageTitle\\PageTitle.jsx",[],"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\DropDownMenuItem\\DropDownMenuItem.jsx",[],"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\Bid\\Bid.jsx",["138"],"import React, { useState, useEffect } from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport \"./Bid.css\";\nimport Column from \"../../components/Column/Column\";\nimport postsApi from \"../../utils/posts-api\";\nimport itemsApi from \"../../utils/items-api\";\n\nconst data = {\n  items: {\n    \"itm-1\": {\n      id: \"itm-1\",\n      name: \"item1\",\n      description: \"somedes\",\n      img: \"https://cdn.greatlifepublishing.net/wp-content/uploads/sites/4/2015/10/23150611/coffee-grinder-715170_960_720.jpg\"\n    },\n    \"itm-2\": {\n      id: \"itm-2\",\n      name: \"item2\",\n      description: \"somedes\",\n      img: \"https://wl-brightside.cf.tsp.li/resize/728x/jpg/181/4fb/2a0b6e52e29e3ba58697034db7.jpg\"\n    },\n    \"itm-3\": {\n      id: \"itm-3\",\n      name: \"item3\",\n      description: \"somedes\",\n      img: \"https://thumbs.dreamstime.com/b/kitchen-antique-items-rural-life-composition-objects-dark-background-194158844.jpg\"\n    },\n  },\n  columns: {\n    \"col-1\": {\n      id: \"col-1\",\n      title: \"Your Items\",\n      itemIds: [\"itm-1\", \"itm-2\", \"itm-3\"]\n    },\n    \"col-2\": {\n      id: \"col-2\",\n      title: \"Bid Items\",\n      itemIds: [],\n    },\n  },\n  columnOrder: [\"col-1\", \"col-2\"],\n};\n\n\nexport default function Bid(props) {\n  const userId = props.user._id;\n\n  const [bid, setBid] = useState({\n    itemsOffered: [],\n    description: \"\"\n  });\n\n\n  const [message, setMessage] = useState(\"\");\n\n  const loadItems = async () => {\n    const res = await itemsApi.show(userId);\n    const itemsForDrag = res.item;\n\n    /** here we transform the database array to our object for the dragging\n      items = [\n        {id: \"60c9656bdb21932de0551b9e\", name: \"WOWOW\", img: \"2084aec2257e16c1dea5d9054cb1e286\"},\n      ]\n      TO\n      itemsHere = {\n        \"60c9656bdb21932de0551b9e\": { id: \"60c9656bdb21932de0551b9e\", name: \"WOWOW\", img: \"2084aec2257e16c1dea5d9054cb1e286\"}\n      }\n    */\n\n    let itemIds = itemsForDrag.map(item => item._id);\n    data.columns[\"col-1\"].itemIds = itemIds;\n    itemsForDrag.forEach(item => {\n      data.items[item._id] = {\n        id: item._id,\n        name: item.title,\n        img: item.image,\n      };\n    });\n  };\n\n  useEffect(() => {\n    loadItems();\n  }, []);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (!bid.description) {\n      setMessage(\"Please enter a description\");\n      return;\n    } else {\n      bid.itemsOffered = items.columns[\"col-2\"].itemIds;\n      await postsApi.makeBid(props.postId, bid);\n      props.loadPosts();\n      handleHidden();\n      setMessage(\"\");\n    }\n  }\n\n  function handleBidChange(e) {\n    e.preventDefault();\n\n    setBid({ ...bid, [e.target.name]: e.target.value });\n  }\n\n  const [items, setItems] = useState(data);\n\n\n  const columns = items.columnOrder;\n\n  const [hidden, setHidden] = useState(\"\");\n  const [icon, setIcon] = useState(\"+\");\n  const [block, setBlock] = useState(\"\");\n\n  const handleHidden = () => {\n    if (hidden === \"hidden\") setHidden(\"\");\n    if (hidden === \"\") setHidden(\"hidden\");\n    if (icon === \"+\") setIcon(\"-\");\n    if (icon === \"-\") setIcon(\"+\");\n    if (block === \"show-bid-form\") setBlock(\"\");\n    if (block === \"\") setBlock(\"show-bid-form\");\n  };\n\n  const onDragEnd = result => {\n    const { destination, source, draggableId } = result;\n    //Out of bounds\n    if (!destination) return;\n    //Same Location\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const start = items.columns[source.droppableId];\n    const end = items.columns[destination.droppableId];\n    //Moving within same column\n    if (start === end) {\n      const newItemIds = Array.from(start.itemIds);\n\n      newItemIds.splice(source.index, 1);\n      newItemIds.splice(destination.index, 0, draggableId);\n\n      const newStartColumn = {\n        ...start,\n        itemIds: newItemIds,\n      };\n\n      const newState = {\n        ...items,\n        columns: {\n          ...items.columns,\n          [newStartColumn.id]: newStartColumn,\n        }\n      };\n\n      setItems(newState);\n      return;\n    }\n\n    //Moving to different column\n    const startItemIds = Array.from(start.itemIds);\n    startItemIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      itemIds: startItemIds,\n    };\n\n    const endItemIds = Array.from(end.itemIds);\n    endItemIds.splice(destination.index, 0, draggableId);\n    const newEnd = {\n      ...end,\n      itemIds: endItemIds,\n    };\n\n    const newState = {\n      ...items,\n      columns: {\n        ...items.columns,\n        [newStart.id]: newStart,\n        [newEnd.id]: newEnd,\n      }\n    };\n    setItems(newState);\n  };\n\n  return (\n    <>\n      <div className=\"PostIdPage post-page-row\">\n        <h3 onClick={handleHidden} className=\"post-btn\">Make A Bid</h3>\n      </div>\n\n      <div className={\"bid-container \"}>\n        <p className={`txt-area-col ${block}`}>Drag and drop to make a bid</p>\n        <div className={`Bid-body-row ${hidden}`}>\n          <DragDropContext className=\"Bid-list\" onDragEnd={onDragEnd}>\n            {columns.map((colId) => {\n              const column = items.columns[colId];\n              const res = column.itemIds.map(itemId => items.items[itemId]);\n              return <Column key={column.id} column={column} res={res} />;\n            })}\n          </DragDropContext>\n        </div>\n        <div className={`txt-area-col ${block}`}>\n          <textarea\n            className=\"bid-text-area\"\n            onChange={handleBidChange}\n            value={bid.description}\n            style={{ height: \"15vh\" }}\n            placeholder=\"Now's your chance, make your pitch!\"\n            name=\"description\"\n            id=\"description\"\n          />\n        </div>\n        <div className={`txt-area-col ${block}`}>\n          <h3 onClick={handleSubmit} className={\"post-btn\"}>Confirm Bid</h3>\n        </div>\n        <h3 className=\"bid-message\">{message}</h3>\n      </div>\n    </>\n  );\n}\n","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\LoginForm\\LoginForm.jsx",[],"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\SignUpForm\\SignUpForm.jsx",[],"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\Reply\\Reply.jsx",[],"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\Form\\Form.jsx",[],"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\Carousel\\Carousel.jsx",["139"],"import \"./Carousel.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from \"react-icons/fa\";\nimport itemsApi from \"../../utils/items-api\";\nimport DeleteButton from \"../DeleteButton/DeleteButton\";\nimport { getUser } from \"../../utils/users-service\";\n\nexport default function Carousel({ user, post }) {\n  let userId;\n  if (user) {\n    userId = user._id;\n  }\n  const [itemData, setItemData] = useState([]);\n\n  const [current, setCurrent] = useState(0);\n  let postLength;\n\n\n\n  const length = itemData.length;\n\n  if (post) postLength = post.itemsOffered.length;\n\n  const nextSlide = () => {\n    if (user) setCurrent(current === length - 1 ? 0 : current + 1);\n    if (post) setCurrent(current === postLength - 1 ? 0 : current + 1);\n  };\n\n  const prevSlide = () => {\n    if (user) setCurrent(current === 0 ? length - 1 : current - 1);\n    if (post) setCurrent(current === 0 ? postLength - 1 : current - 1);\n  };\n\n  const handleDelete = async (id) => {\n    if (user) {\n      await itemsApi.deleteItem(id);\n      const items = await itemsApi.show(userId);\n      setItemData(items.item);\n    }\n  };\n\n  const getItems = async () => {\n    if (user) {\n      const items = await itemsApi.show(userId);\n      setItemData(items.item);\n    }\n  };\n\n  useEffect(() => {\n    if (getUser()) getItems();\n  }, []);\n\n  return (\n    <div className=\"col-2-pics\">\n      {user ? (\n        <>\n          {itemData.map((item, index) => {\n            return (\n              <div\n                className={index === current ? \"slide active\" : \"slide\"}\n                key={index}\n              >\n                {index === current && (\n                  <>\n                    <div id=\"Carousel-title\">{item.title}</div>\n\n                    <img id=\"image\" alt=\"test\" src={`${item.image}`}></img>\n                    <div className=\"user-profile-delete-item\">\n                      <DeleteButton handleDelete={() => handleDelete(item._id)} />\n                    </div>\n                  </>\n                )}\n              </div>\n            );\n          })}\n\n          {length === 1 ? null :\n            <div className=\"img-slider-arrows\">\n              <FaArrowAltCircleLeft className=\"right-arr\" onClick={prevSlide} />\n              <FaArrowAltCircleRight className=\"right-arr\" onClick={nextSlide} />\n            </div>\n          }\n        </>\n      ) : (\n        <>\n          {post.itemsOffered.length\n            ? post.itemsOffered.map((item, index) => {\n              return (\n                <div\n                  className={index === current ? \"slide active\" : \"slide\"}\n                  key={index}\n                >\n                  {index === current && (\n                    <>\n                      <div id=\"Carousel-title\">\n                        {item.title.toLowerCase()}\n                      </div>\n                      <img id=\"image\" alt=\"test\" src={`${item.image}`}></img>\n                    </>\n                  )}\n                </div>\n              );\n            })\n            : null}\n\n          {post.itemsOffered.length === 1 ? null :\n            <div className=\"img-slider-arrows\">\n              <FaArrowAltCircleLeft className=\"right-arr\" onClick={prevSlide} />\n              <FaArrowAltCircleRight className=\"right-arr\" onClick={nextSlide} />\n            </div>\n          }\n        </>\n      )}\n\n\n\n    </div>\n  );\n}\n","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\ItemCreateForm\\ItemCreateForm.jsx",[],"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\Column\\Column.jsx",[],"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\Deal\\Deal.jsx",["140"],"import React, { useState, useEffect } from \"react\";\nimport { FaHandshake } from \"react-icons/fa\";\nimport { TiCancel } from \"react-icons/ti\";\nimport { GiCheckMark } from \"react-icons/gi\";\nimport postsApi from \"../../utils/posts-api\";\nimport Conversation from \"../Conversation/Conversation\";\nimport \"./Deal.css\";\n\nexport default function Deal({ user, post, reply }) {\n  const [deal, setDeal] = useState(null);\n  const [confirmStatus, setConfirmStatus] = useState(\"Confirm\");\n\n  useEffect(() => {\n    loadDeal();\n  }, []);\n\n  function loadDeal() {\n    postsApi.getOneDeal(post._id, reply._id)\n      .then(foundDeal => {\n        setDeal(foundDeal);\n      });\n  }\n\n  async function handleStartDeal() {\n    await postsApi.startDeal(post._id, reply._id);\n    setDeal(await postsApi.getOneDeal(post._id, reply._id));\n  }\n\n  async function handleCancelDeal() {\n    const res = await postsApi.deleteDeal(post._id, reply._id);\n    if (res.ok) {\n      setDeal(null);\n    }\n    setConfirmStatus(\"Confirm\");\n  }\n\n  async function confirmDealToggle() {\n    await postsApi.confirmDealToggle(post._id, reply._id);\n    loadDeal();\n    if (confirmStatus === \"Confirm\") setConfirmStatus(\"Undo Confirm\");\n    if (confirmStatus === \"Undo Confirm\") setConfirmStatus(\"Confirm\");\n  }\n\n  return (\n    <div className=\"Deal\">\n      {deal ?\n        <div className=\"Deal-container\">\n\n          {deal.posterHasConfirmed && deal.replierHasConfirmed\n            ? <p className=\"Deal-p\">DEAL CONFIRMED!</p>\n            :\n            <>\n              <div className=\"Deal-poster\">\n                {post.author.name}\n                {deal.posterHasConfirmed\n                  ? <span className=\"Deal-span\"> has <b>confirmed</b></span>\n                  : <span className=\"Deal-span\"> has <b>not</b> confirmed</span>\n                }\n              </div>\n              <FaHandshake id=\"Reply-deal-shake\" />\n              <span className=\"Deal-replier\">\n                {reply.author.name}\n                {deal.replierHasConfirmed\n                  ? <span className=\"Deal-span\"> has <b>confirmed</b></span>\n                  : <span className=\"Deal-span\"> has <b>not</b> confirmed</span>\n                }\n              </span>\n              <br />\n\n              <div className=\"Reply-btns-div\">\n                {user._id === post.author._id\n                  ? <button\n                    className=\"Deal-button\"\n                    onClick={handleCancelDeal}>\n                    <TiCancel className=\"Deal-cancel-icon\" />\n                  </button>\n                  : null\n                }\n                <button\n                  id=\"Deal-button-green\"\n                  className=\"Deal-button\"\n                  onClick={confirmDealToggle}>\n                  <GiCheckMark />\n                </button>\n              </div>\n            </>\n          }\n          {user._id === post.author._id || user._id === reply.author._id\n            ? <Conversation post={post} reply={reply} deal={deal} />\n            : null\n          }\n\n        </div>\n        : user._id === post.author._id\n          ?\n          <div onClick={handleStartDeal}>\n            <FaHandshake id=\"Reply-deal\" />\n            <div className=\"Reply-txt\">Make Deal</div>\n          </div>\n          :\n          null\n      }\n    </div>\n  );\n}\n","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\ItemDrag\\ItemDrag.jsx",["141"],"import React, { useState, useEffect } from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport Column from \"../../components/Column/Column\";\nimport itemsApi from \"../../utils/items-api\";\nimport { getUser } from \"../../utils/users-service\";\nimport \"./ItemDrag.css\";\n\nconst data = {\n  items: {\n    \"itm-1\": {\n      id: \"itm-1\",\n      name: \"item1\",\n      description: \"somedes\",\n      img: \"https://cdn.greatlifepublishing.net/wp-content/uploads/sites/4/2015/10/23150611/coffee-grinder-715170_960_720.jpg\"\n    },\n    \"itm-2\": {\n      id: \"itm-2\",\n      name: \"item2\",\n      description: \"somedes\",\n      img: \"https://wl-brightside.cf.tsp.li/resize/728x/jpg/181/4fb/2a0b6e52e29e3ba58697034db7.jpg\"\n    },\n    \"itm-3\": {\n      id: \"itm-3\",\n      name: \"item3\",\n      description: \"somedes\",\n      img: \"https://thumbs.dreamstime.com/b/kitchen-antique-items-rural-life-composition-objects-dark-background-194158844.jpg\"\n    },\n  },\n  columns: {\n    \"col-1\": {\n      id: \"col-1\",\n      title: \"Your Items\",\n      itemIds: []\n    },\n    \"col-2\": {\n      id: \"col-2\",\n      title: \"Post Items\",\n      itemIds: [],\n    },\n  },\n  columnOrder: [\"col-1\", \"col-2\"],\n};\n\nexport default function ItemDrag({ setItemsOffered }) {\n  const user = getUser();\n  const userId = user._id;\n\n  const loadItems = async () => {\n    const res = await itemsApi.show(userId);\n    const itemsForDrag = res.item;\n    let itemIds = itemsForDrag.map(item => item._id);\n    data.columns[\"col-1\"].itemIds = itemIds;\n    itemsForDrag.forEach(item => {\n      data.items[item._id] = {\n        id: item._id,\n        name: item.title,\n        img: item.image,\n      };     \n    });\n    \n    setItems({...data});\n    \n  };\n\n  const [items, setItems] = useState(data);\n  const columns = items.columnOrder;\n\n  useEffect(() => {\n    loadItems();\n    \n  }, []);\n\n  useEffect(() => {\n    const itemsoffered = items.columns[\"col-2\"].itemIds;\n    setItemsOffered(itemsoffered);\n  }, [items, setItemsOffered]);\n\n  const onDragEnd = result => {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const start = items.columns[source.droppableId];\n    const end = items.columns[destination.droppableId];\n\n    if (start === end) {\n      const newItemIds = Array.from(start.itemIds);\n\n      newItemIds.splice(source.index, 1);\n      newItemIds.splice(destination.index, 0, draggableId);\n\n      const newStartColumn = {\n        ...start,\n        itemIds: newItemIds,\n      };\n\n      const newState = {\n        ...items,\n        columns: {\n          ...items.columns,\n          [newStartColumn.id]: newStartColumn,\n        }\n      };\n\n      setItems(newState);\n      return;\n    }\n\n    //Moving to different column\n    const startItemIds = Array.from(start.itemIds);\n    startItemIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      itemIds: startItemIds,\n    };\n\n    const endItemIds = Array.from(end.itemIds);\n    endItemIds.splice(destination.index, 0, draggableId);\n    const newEnd = {\n      ...end,\n      itemIds: endItemIds,\n    };\n\n    const newState = {\n      ...items,\n      columns: {\n        ...items.columns,\n        [newStart.id]: newStart,\n        [newEnd.id]: newEnd,\n      }\n    };\n    setItems(newState);\n    \n\n  };\n\n  return (\n    <div>\n      <DragDropContext  onDragEnd={onDragEnd}>\n            {columns.map((colId) => {\n              const column = items.columns[colId];\n              const res = column.itemIds.map(itemId => items.items[itemId]);\n              return (<div key={`col-${column.id}`} className=\"Bid-list\"><Column column={column} res={res} /></div>);\n            })}\n          </DragDropContext>\n    </div>\n  );\n}\n","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\Item\\Item.jsx",[],"C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\components\\Conversation\\Conversation.jsx",["142"],"import { useState, useEffect, useRef } from \"react\";\nimport { getMessages, sendMessage } from \"../../utils/messages-api\";\nimport { FiSend } from \"react-icons/fi\";\nimport { getUser } from \"../../utils/users-service\";\n\nimport socketIOClient from \"socket.io-client\";\nimport \"./Conversation.css\";\nconst ENDPOINT = \"https://trader-among-us.herokuapp.com\";\n\nexport default function Conversation({ post, reply, deal }) {\n  const [user] = useState(getUser());\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const scroll = useRef(null);\n\n  useEffect(() => {\n    getMessages(post._id, reply._id)\n      .then(res => setMessages(res));\n\n\n    const socket = socketIOClient(ENDPOINT);\n\n    socket.on(\"WhatDeal\", () => {\n      socket.emit(\"WatchDeal\", deal._id);\n    });\n\n    socket.on(\"NewMessage\", socketMessages => {\n      setMessages(socketMessages);\n    });\n\n\n    return () => socket.disconnect();\n  }, []);\n\n  useEffect(() => {\n    scroll.current.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  function handleMessageChange(e) {\n    e.preventDefault();\n\n    setInputValue(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    sendMessage(post._id, reply._id, inputValue)\n      .then(res => setMessages(res))\n      .then(setInputValue(\"\"));\n  }\n\n  return (\n    <div>\n      <div className=\"Conversation-chat-box\">\n        {messages.length ?\n          messages.map(\n            (message, idx) =>\n              <div key={`message-${deal._id}-${idx}`} className=\"Conversation-div\">\n                <div\n                  className=\n                  {\n                    user.name === message.slice(0, message.indexOf(\":\"))\n                      ?\n                      \"Conversation-main-msg\"\n                      :\n                      \"Conversation-reply\"\n                  }\n                >\n                  {message.slice(message.indexOf(\":\") + 1).trim()}\n                </div>\n              </div>\n            ) : null}\n        <div ref={scroll}></div>\n      </div>\n      <div className=\"Message-form-container\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"Flex-form-message\">\n            <input\n              className=\"Message-form\"\n              type=\"text\"\n              name=\"message\"\n              id=\"message\"\n              required=\"true\"\n              value={inputValue}\n              onChange={handleMessageChange}\n              placeholder=\"Enter a message\"\n            />\n          </div>\n          <div className=\"Flex-buttons-message\">\n            <button type=\"submit\"><FiSend className=\"Message-send\" /></button>\n          </div>\n        </form>\n      </div>\n\n    </div>\n  );\n}\n","C:\\Users\\Riya\\OneDrive\\Desktop\\trader-among-us-master\\src\\utils\\messages-api.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":60,"column":6,"nodeType":"149","endLine":60,"endColumn":8,"suggestions":"150"},{"ruleId":"147","severity":1,"message":"151","line":33,"column":6,"nodeType":"149","endLine":33,"endColumn":8,"suggestions":"152"},{"ruleId":"147","severity":1,"message":"153","line":83,"column":6,"nodeType":"149","endLine":83,"endColumn":8,"suggestions":"154"},{"ruleId":"147","severity":1,"message":"151","line":51,"column":6,"nodeType":"149","endLine":51,"endColumn":8,"suggestions":"155"},{"ruleId":"147","severity":1,"message":"156","line":15,"column":6,"nodeType":"149","endLine":15,"endColumn":8,"suggestions":"157"},{"ruleId":"147","severity":1,"message":"153","line":71,"column":6,"nodeType":"149","endLine":71,"endColumn":8,"suggestions":"158"},{"ruleId":"147","severity":1,"message":"159","line":34,"column":6,"nodeType":"149","endLine":34,"endColumn":8,"suggestions":"160"},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadPosts'. Either include it or remove the dependency array.","ArrayExpression",["163"],"React Hook useEffect has a missing dependency: 'getItems'. Either include it or remove the dependency array.",["164"],"React Hook useEffect has a missing dependency: 'loadItems'. Either include it or remove the dependency array.",["165"],["166"],"React Hook useEffect has a missing dependency: 'loadDeal'. Either include it or remove the dependency array.",["167"],["168"],"React Hook useEffect has missing dependencies: 'deal._id', 'post._id', and 'reply._id'. Either include them or remove the dependency array.",["169"],"no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"172","fix":"176"},{"desc":"177","fix":"178"},{"desc":"174","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [loadPosts]",{"range":"182","text":"183"},"Update the dependencies array to be: [getItems]",{"range":"184","text":"185"},"Update the dependencies array to be: [loadItems]",{"range":"186","text":"187"},{"range":"188","text":"185"},"Update the dependencies array to be: [loadDeal]",{"range":"189","text":"190"},{"range":"191","text":"187"},"Update the dependencies array to be: [deal._id, post._id, reply._id]",{"range":"192","text":"193"},[1709,1711],"[loadPosts]",[993,995],"[getItems]",[2180,2182],"[loadItems]",[1349,1351],[515,517],"[loadDeal]",[1831,1833],[949,951],"[deal._id, post._id, reply._id]"]